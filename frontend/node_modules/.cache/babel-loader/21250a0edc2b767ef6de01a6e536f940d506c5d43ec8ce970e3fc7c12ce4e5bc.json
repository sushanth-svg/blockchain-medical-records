{"ast":null,"code":"var _jsxFileName = \"D:\\\\blockchain\\\\blockchain-medical-records\\\\frontend\\\\src\\\\components\\\\PatientDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PatientDashboard = ({\n  web3,\n  accounts,\n  contract\n}) => {\n  _s();\n  const [records, setRecords] = useState([]);\n  const [doctorAddress, setDoctorAddress] = useState(\"\");\n\n  // Fetch patient records\n  const fetchRecords = async () => {\n    const patientRecords = await contract.methods.getRecords(accounts[0]).call({\n      from: accounts[0]\n    });\n    setRecords(patientRecords);\n  };\n\n  // Grant access to a doctor\n  const grantAccess = async () => {\n    await contract.methods.grantAccess(doctorAddress).send({\n      from: accounts[0]\n    });\n    alert(\"Access granted to doctor!\");\n  };\n\n  // Revoke access from a doctor\n  const revokeAccess = async () => {\n    await contract.methods.revokeAccess(doctorAddress).send({\n      from: accounts[0]\n    });\n    alert(\"Access revoked from doctor!\");\n  };\n  useEffect(() => {\n    fetchRecords();\n  }, [contract]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Patient Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Records:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: records.map((record, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Description: \", record.description]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Doctor: \", record.doctor]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"IPFS Hash: \", record.ipfsHash]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Date: \", new Date(record.timestamp * 1000).toLocaleString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Manage Access\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Doctor's Address\",\n      value: doctorAddress,\n      onChange: e => setDoctorAddress(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: grantAccess,\n      children: \"Grant Access\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: revokeAccess,\n      children: \"Revoke Access\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n};\n_s(PatientDashboard, \"JFtFY5RDk2pQiSvtHxeYDLk4mlc=\");\n_c = PatientDashboard;\nexport default PatientDashboard;\nvar _c;\n$RefreshReg$(_c, \"PatientDashboard\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","PatientDashboard","web3","accounts","contract","_s","records","setRecords","doctorAddress","setDoctorAddress","fetchRecords","patientRecords","methods","getRecords","call","from","grantAccess","send","alert","revokeAccess","children","fileName","_jsxFileName","lineNumber","columnNumber","map","record","index","description","doctor","ipfsHash","Date","timestamp","toLocaleString","type","placeholder","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["D:/blockchain/blockchain-medical-records/frontend/src/components/PatientDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\n\r\nconst PatientDashboard = ({ web3, accounts, contract }) => {\r\n    const [records, setRecords] = useState([]);\r\n    const [doctorAddress, setDoctorAddress] = useState(\"\");\r\n\r\n    // Fetch patient records\r\n    const fetchRecords = async () => {\r\n        const patientRecords = await contract.methods.getRecords(accounts[0]).call({ from: accounts[0] });\r\n        setRecords(patientRecords);\r\n    };\r\n\r\n    // Grant access to a doctor\r\n    const grantAccess = async () => {\r\n        await contract.methods.grantAccess(doctorAddress).send({ from: accounts[0] });\r\n        alert(\"Access granted to doctor!\");\r\n    };\r\n\r\n    // Revoke access from a doctor\r\n    const revokeAccess = async () => {\r\n        await contract.methods.revokeAccess(doctorAddress).send({ from: accounts[0] });\r\n        alert(\"Access revoked from doctor!\");\r\n    };\r\n\r\n    useEffect(() => {\r\n        fetchRecords();\r\n    }, [contract]);\r\n\r\n    return (\r\n        <div>\r\n            <h1>Patient Dashboard</h1>\r\n            <h2>Your Records:</h2>\r\n            <ul>\r\n                {records.map((record, index) => (\r\n                    <li key={index}>\r\n                        <p>Description: {record.description}</p>\r\n                        <p>Doctor: {record.doctor}</p>\r\n                        <p>IPFS Hash: {record.ipfsHash}</p>\r\n                        <p>Date: {new Date(record.timestamp * 1000).toLocaleString()}</p>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n\r\n            <h2>Manage Access</h2>\r\n            <input\r\n                type=\"text\"\r\n                placeholder=\"Doctor's Address\"\r\n                value={doctorAddress}\r\n                onChange={(e) => setDoctorAddress(e.target.value)}\r\n            />\r\n            <button onClick={grantAccess}>Grant Access</button>\r\n            <button onClick={revokeAccess}>Revoke Access</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PatientDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}